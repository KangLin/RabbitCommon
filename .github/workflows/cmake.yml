name: CMake windows

on: [push]

jobs:
  use_install_qt:
    name: ${{ matrix.os }}-${{matrix.triplet}}-qt${{matrix.qt_version}}-${{ matrix.BUILD_TYPE }}

    strategy:
      matrix:
        BUILD_TYPE: [Release, Debug]
        #os: [windows-2019, windows-2016]
        qt_version: [5.15.2, 5.12.11]
        include:
#          - os: windows-2019
#            triplet: x64-windows
#            VCPKG_PLATFORM_TOOLSET: v142
#            qt_version: 6.2.0
#            qt_arch: win64_msvc2019_64
#            CMAKE_GENERATOR: "Visual Studio 16 2019"
#            CMAKE_GENERATOR_PLATFORM: x64
            
          - os: windows-2019
            triplet: x64-windows
            VCPKG_PLATFORM_TOOLSET: v142
            qt_version: 5.15.2
            qt_arch: win64_msvc2019_64
            CMAKE_GENERATOR: "Visual Studio 16 2019"
            CMAKE_GENERATOR_PLATFORM: x64
            
          - os: windows-2016
            triplet: x86-windows
            VCPKG_PLATFORM_TOOLSET: v141
            qt_version: 5.12.11
            qt_arch: win32_msvc2017
            CMAKE_GENERATOR: "Visual Studio 15 2017"
            CMAKE_GENERATOR_PLATFORM: Win32
        
    runs-on: ${{ matrix.os }}

    env:
      BUILD_TYPE:  ${{ matrix.BUILD_TYPE }}
      SOURCE_DIR:  ${{github.workspace}}/source
      TOOSL_DIR:   ${{github.workspace}}/tools
      INSTALL_DIR: ${{github.workspace}}/install
      VCPKG_PLATFORM_TOOLSET: ${{matrix.VCPKG_PLATFORM_TOOLSET}}
      CMAKE_GENERATOR_PLATFORM: ${{matrix.CMAKE_GENERATOR_PLATFORM}}
      CMAKE_GENERATOR: ${{matrix.CMAKE_GENERATOR}}
      VCPKGGITCOMMITID: 973a7d517c09c8cfb7e6a548fcc260ca34ba7b60
      qt_modules: QWebEngine

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: make directory
      run: |
        cmake -E make_directory ${{env.SOURCE_DIR}}
        cmake -E make_directory ${{env.TOOSL_DIR}}
        cmake -E make_directory ${{env.INSTALL_DIR}}

    - name: Cache installed
      uses: actions/cache@v2
      id: cache-installed
      with:
        path: |
          ${{env.INSTALL_DIR}}
        key: cache-installed-${{matrix.os}}-${{matrix.triplet}}-qt${{matrix.qt_version}}-${{matrix.BUILD_TYPE}}
    
    - name: run-vcpkg
      uses: lukka/run-vcpkg@v7.4
      with:
        # Indicates whether to only setup vcpkg (i.e. installing it and setting the environment variables VCPKG_ROOT, RUNVCPK_VCPKG_ROOT), without installing any port.
        #setupOnly: # optional
        #vcpkgGitURL: https://github.com/KangLin/vcpkg.git
        vcpkgGitCommitId: ${{env.VCPKGGITCOMMITID}}
        vcpkgDirectory: ${{runner.workspace}}/vcpkg/
        # Since the cache must be invalidated when content of the vcpkg.json file changes, let's
        # compute its hash and append this to the computed cache's key.
        appendedCacheKey: cache-vcpkg-msvc-${{matrix.os}}-${{matrix.triplet}}-qt${{matrix.qt_version}}-${{matrix.BUILD_TYPE}}-${{env.VCPKGGITCOMMITID}}
        #additionalCachedPaths: ${{ env.VCPKG_ROOT }}/installed
        vcpkgTriplet: '${{matrix.triplet}}'
        vcpkgArguments: 'zlib lzo openssl cmark libssh log4cxx libpng pixman libjpeg-turbo libdatachannel'

    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1  # not v2!
      with:
        path: ${{env.TOOSL_DIR}}/qt
        key: ${{ matrix.os }}-${{matrix.triplet}}-qt${{matrix.qt_version}}-${{ matrix.BUILD_TYPE }}-QtCache-2021-11-03
    
    - name: Install Qt
      # You may pin to the exact commit or the version.
      # uses: jurplel/install-qt-action@a962fb91949c8e846a3e4a944d50e7ef5cc3a28a
      uses: jurplel/install-qt-action@v2.11.1
      with:
        # Directory to install Qt
        dir: ${{env.TOOSL_DIR}}/qt # optional
        # Version of Qt to install
        version: ${{matrix.qt_version}} # optional, default is 5.15.2
        # Host platform
        #host: linux # optional
        # Target platform for build
        #target: desktop # optional, default is desktop
        # Architecture for Windows/Android
        arch: ${{matrix.qt_arch}} # optional
        # Whether or not to install Qt dependencies on Linux
        #install-deps: true # optional, default is true
        # Additional Qt modules to install
        modules: ${{env.qt_modules}} # optional
        # Force a Qt mirror in case the default is not working
        #mirror: # optional
        # Whether or not to actually download Qt
        cached: ${{ steps.cache-qt.outputs.cache-hit }} # optional, default is false
        # Whether or not to automatically run setup-python to find a valid python version.
        #setup-python: false # optional, default is true
        # Qt tools to download--specify comma-separated argument lists which are themselves separated by spaces: <tool_name>,<tool_version>,<tool_arch>
        #tools: # optional
        # Whether or not to actually install Qt or just the tools from the tools argument
        #tools-only: false # optional, default is false
        # Version of aqtinstall to use in case of issues
        #aqtversion: # optional, default is ==0.10.0
        # Version of py7zr to use in case of issues
        #py7zrversion: # optional, default is ==0.11.0
        # Any extra arguments to append to the back
        #extra: # optional

    - name: build log4qt
      working-directory: ${{env.SOURCE_DIR}}
      run: |
        IF NOT EXIST ${{env.INSTALL_DIR}}/lib/cmake/Log4Qt (
            git clone -b v1.5.1 https://github.com/MEONMedical/Log4Qt.git
            cd Log4Qt
            cmake -E make_directory build
            cd build
            cmake .. ^
                -DCMAKE_BUILD_TYPE=${{matrix.BUILD_TYPE}} ^
                -DCMAKE_INSTALL_PREFIX=${{env.INSTALL_DIR}} ^
                -DCMAKE_TOOLCHAIN_FILE=${{env.VCPKG_ROOT}}/scripts/buildsystems/vcpkg.cmake
            cmake --build . --config ${{matrix.BUILD_TYPE}}
            cmake --build . --config ${{matrix.BUILD_TYPE}} --target install
        )
        
    - name: build RabbitCommon
      run: |
        cmake -E make_directory ${{github.workspace}}/build
        cd ${{github.workspace}}/build
        cmake ${{github.workspace}} -G"${{matrix.GENERATORS}}" -DCMAKE_BUILD_TYPE=${{ matrix.BUILD_TYPE }} -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/build/install -DLog4Qt_DIR=/lib/cmake/Log4Qt -DCMAKE_PREFIX_PATH=${{ env.INSTALL_DIR }} -DCMAKE_TOOLCHAIN_FILE=${{env.VCPKG_ROOT}}/scripts/buildsystems/vcpkg.cmake
        cmake --build . --config ${{ matrix.BUILD_TYPE }}
        cmake --build . --config ${{ matrix.BUILD_TYPE }} --target install
