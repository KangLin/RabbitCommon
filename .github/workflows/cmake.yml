name: CMake

on: [push]
  
jobs:
  use_install_qt:
    name: use install qt ${{ matrix.os }}-${{ matrix.BUILD_TYPE }}
  
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        qt_version: [5.12.9, 5.6.2]
        include:
          - os: windows-latest
            triplet: x64-windows
          - os: ubuntu-latest
            triplet: x64-linux
          - os: macos-latest
            triplet: x64-osx
        BUILD_TYPE: [Release, Debug]
    runs-on: ${{ matrix.os }}

    env:
      BUILD_TYPE: ${{ matrix.BUILD_TYPE }}
  
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    
    - name: apt helper action
      # You may pin to the exact commit or the version.
      # uses: ryankurte/action-apt@7356b2f8b9c6f8043a3d0ab3b991701dc817b759
      uses: ryankurte/action-apt@v0.2.0
      with:
        # architectures to pass to dpkg --add-architecture
        #architectures: # optional
        # apt packages to install
        packages: libx11-dev
      if: ${{ matrix.os == 'ubuntu-latest' }}
      
    - name: Install Qt
      # You may pin to the exact commit or the version.
      # uses: jurplel/install-qt-action@a962fb91949c8e846a3e4a944d50e7ef5cc3a28a
      uses: jurplel/install-qt-action@v2.11.1
      with:
        # Directory to install Qt
        dir: ${{runner.workspace}}/qt # optional
        # Version of Qt to install
        version: ${{matrix.qt_version}} # optional, default is 5.15.2
        # Host platform
        #host: linux # optional
        # Target platform for build
        target: desktop # optional, default is desktop
        # Architecture for Windows/Android
        #arch: # optional
        # Whether or not to install Qt dependencies on Linux
        install-deps: true # optional, default is true
        # Additional Qt modules to install
        modules: none # optional
        # Force a Qt mirror in case the default is not working
        #mirror: # optional
        # Whether or not to actually download Qt
        cached: true # optional, default is false
        # Whether or not to automatically run setup-python to find a valid python version.
        setup-python: false # optional, default is true
        # Qt tools to download--specify comma-separated argument lists which are themselves separated by spaces: <tool_name>,<tool_version>,<tool_arch>
        #tools: # optional
        # Whether or not to actually install Qt or just the tools from the tools argument
        tools-only: false # optional, default is false
        # Version of aqtinstall to use in case of issues
        #aqtversion: # optional, default is ==0.10.0
        # Version of py7zr to use in case of issues
        #py7zrversion: # optional, default is ==0.11.0
        # Any extra arguments to append to the back
        #extra: # optional
        
    - name: run-vcpkg
      # You may pin to the exact commit or the version.
      # uses: lukka/run-vcpkg@a1b6a0046a28c09f4bcc8caa9eecec9a8e512152
      uses: lukka/run-vcpkg@v6.1
      with:
        # Indicates whether to only setup vcpkg (i.e. installing it and setting the environment variables VCPKG_ROOT, RUNVCPK_VCPKG_ROOT), without installing any port.
        #setupOnly: # optional
        vcpkgGitCommitId: b60f003ccf5fe8613d029f49f835c8929a66eb61
        vcpkgDirectory: ${{ runner.workspace }}/vcpkg/
        vcpkgTriplet: '${{ matrix.triplet }}'
        vcpkgArguments: 'openssl log4cplus'

    - name: Build with CMake
      uses: lukka/run-cmake@main
      with:
        useVcpkgToolchainFile: true
        buildDirectory: ${{ runner.workspace }}/build
        cmakeBuildType: ${{ matrix.BUILD_TYPE }}
        cmakeAppendedArgs: -DCMAKE_INSTALL_PREFIX=${{ runner.workspace }}/build/install
