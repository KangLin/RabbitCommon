name: CMake android

on: [push]

jobs:
  use_install_qt:
    name: use install qt android-qt${{matrix.qt_version}}-${{matrix.VCPKG_TARGET_TRIPLET}}-${{matrix.BUILD_TYPE}}

    strategy:
      matrix:
        BUILD_TYPE: [Release, Debug]
        ANDROID_ABI: [armeabi-v7a, x86]
        ANDROID_PLATFORM: [android-28]
        qt_version: [5.12.11]
        include:
          - VCPKG_TARGET_TRIPLET: arm-android
            qt_arch: android_armv7
            ANDROID_ABI: armeabi-v7a
        
          - VCPKG_TARGET_TRIPLET: x86-android
            qt_arch: android_x86
            ANDROID_ABI: x86

    runs-on: ubuntu-latest

    env:
      SOURCE_DIR:  ${{github.workspace}}/source
      TOOSL_DIR:   ${{github.workspace}}/tools
      INSTALL_DIR: ${{github.workspace}}/install
      RabbitCommon_VERSION: v1.0.8
      VCPKGGITCOMMITID: 809266d51a238e504acc134e5878c7860d5c179c
      qt_modules: qtwebengine
      
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Make directories
        run: |
          cmake -E make_directory ${{env.SOURCE_DIR}}
          cmake -E make_directory ${{env.TOOSL_DIR}}
          cmake -E make_directory ${{env.INSTALL_DIR}}
    
      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v1  # not v2!
        with:
          path: ${{env.TOOSL_DIR}}/qt
          key: android-qt${{matrix.qt_version}}-${{matrix.VCPKG_TARGET_TRIPLET}}-${{matrix.BUILD_TYPE}}
        
      - name: Install Qt
        # You may pin to the exact commit or the version.
        # uses: jurplel/install-qt-action@a962fb91949c8e846a3e4a944d50e7ef5cc3a28a
        uses: jurplel/install-qt-action@v2.11.1
        with:
          # Directory to install Qt
          dir: ${{env.TOOSL_DIR}}/qt # optional
          # Version of Qt to install
          version: ${{matrix.qt_version}} # optional, default is 5.15.2
          # Host platform
          #host: linux # optional
          # Target platform for build
          target: android # optional, default is desktop
          # Architecture for Windows/Android
          arch: ${{matrix.qt_arch}} # optional
          # Whether or not to install Qt dependencies on Linux
          #install-deps: true # optional, default is true
          # Additional Qt modules to install
          modules: ${{env.qt_modules}} # optional
          # Force a Qt mirror in case the default is not working
          #mirror: # optional
          # Whether or not to actually download Qt
          cached: ${{ steps.cache-qt.outputs.cache-hit }} # optional, default is false
          # Whether or not to automatically run setup-python to find a valid python version.
          #setup-python: false # optional, default is true
          # Qt tools to download--specify comma-separated argument lists which are themselves separated by spaces: <tool_name>,<tool_version>,<tool_arch>
          #tools: # optional
          # Whether or not to actually install Qt or just the tools from the tools argument
          #tools-only: false # optional, default is false
          # Version of aqtinstall to use in case of issues
          #aqtversion: # optional, default is ==0.10.0
          # Version of py7zr to use in case of issues
          #py7zrversion: # optional, default is ==0.11.0
          # Any extra arguments to append to the back
          #extra: # optional

      - name: apt install packages
        run: |
          sudo apt install -y -q yasm nasm

      - name: run-vcpkg
        uses: lukka/run-vcpkg@v7.4
        with:
          # Indicates whether to only setup vcpkg (i.e. installing it and setting the environment variables VCPKG_ROOT, RUNVCPK_VCPKG_ROOT), without installing any port.
          #setupOnly: # optional
          #vcpkgGitURL: https://github.com/KangLin/vcpkg.git
          vcpkgGitCommitId: ${{env.VCPKGGITCOMMITID}}
          vcpkgDirectory: ${{ runner.workspace }}/vcpkg/
          # Since the cache must be invalidated when content of the vcpkg.json file changes, let's
          # compute its hash and append this to the computed cache's key.
          appendedCacheKey: android_qt${{matrix.qt_version}}-${{matrix.VCPKG_TARGET_TRIPLET}}-${{matrix.BUILD_TYPE}}-${{env.VCPKGGITCOMMITID}}
          additionalCachedPaths: $VCPKG_ROOT/installed
          vcpkgTriplet: '${{ matrix.VCPKG_TARGET_TRIPLET }}'
          vcpkgArguments: 'cmark'
        
      - name: Cache installed
        uses: actions/cache@v3
        id: cache-installed
        with:
          path: |
            ${{env.INSTALL_DIR}}
          key: cache-installed-android-qt${{matrix.qt_version}}-${{matrix.VCPKG_TARGET_TRIPLET}}-${{matrix.BUILD_TYPE}}

      - name: build log4qt
        if: false
        working-directory: ${{env.SOURCE_DIR}}
        env:
          QT_ROOT: ${{env.Qt5_Dir}}
        run: |
          if [ ! -d ${{env.INSTALL_DIR}}/lib/cmake/Log4Qt ]; then
              git clone -b v1.5.1 "https://github.com/MEONMedical/Log4Qt.git"
              cd Log4Qt
              cmake -E make_directory build
              cd build
              cmake .. -DCMAKE_BUILD_TYPE=${{matrix.BUILD_TYPE}} \
                  -DQt5_DIR=${{env.QT_ROOT}}/lib/cmake/Qt5 \
                  -DQt5Core_DIR=${{env.QT_ROOT}}/lib/cmake/Qt5Core \
                  -DQt5Network_DIR=${{env.QT_ROOT}}/lib/cmake/Qt5Network \
                  -DQt5Concurrent_DIR=${{env.QT_ROOT}}/lib/cmake/Qt5Concurrent \
                  -DQt5Test_DIR=${{env.QT_ROOT}}/lib/cmake/Qt5Test \
                  -DCMAKE_INSTALL_PREFIX=${{env.INSTALL_DIR}} \
                  -DCMAKE_PREFIX_PATH=${{env.QT_ROOT}} \
                  -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
                  -DANDROID_ABI=${{matrix.ANDROID_ABI}} \
                  -DANDROID_PLATFORM=${{matrix.ANDROID_PLATFORM}}
              cmake --build . --config ${{matrix.BUILD_TYPE}}
              cmake --build . --config ${{matrix.BUILD_TYPE}} --target install
          fi

      - name: build RabbitCommon
        working-directory: ${{github.workspace}}
        env:
          QT_ROOT: ${{env.Qt5_Dir}}
        run: |
          cmake -E make_directory ${{github.workspace}}/build
          cd ${{github.workspace}}/build
          cmake ${{github.workspace}} \
              -DLog4Qt_DIR=/lib/cmake/Log4Qt \
              -DCMARK_SHARED=OFF \
              -DCMARK_TESTS=OFF \
              -DCMARK_STATIC=ON \
              -DQT_DIR=${{env.QT_ROOT}}/lib/cmake/Qt5 \
              -DQt5_DIR=${{env.QT_ROOT}}/lib/cmake/Qt5 \
              -DQt5Core_DIR=${{env.QT_ROOT}}/lib/cmake/Qt5Core \
              -DQt5Gui_DIR=${{env.QT_ROOT}}/lib/cmake/Qt5Gui \
              -DQt5Widgets_DIR=${{env.QT_ROOT}}/lib/cmake/Qt5Widgets \
              -DQt5Xml_DIR=${{env.QT_ROOT}}/lib/cmake/Qt5Xml \
              -DQt5Network_DIR=${{env.QT_ROOT}}/lib/cmake/Qt5Network \
              -DQt5Multimedia_DIR=${{env.QT_ROOT}}/lib/cmake/Qt5Multimedia \
              -DQt5LinguistTools_DIR=${{env.QT_ROOT}}/lib/cmake/Qt5LinguistTools \
              -DQt5AndroidExtras_DIR=${{env.QT_ROOT}}/lib/cmake/Qt5AndroidExtras \
              -DQt5Concurrent_DIR=${{env.QT_ROOT}}/lib/cmake/Qt5Concurrent \
              -DQt5Test_DIR=${{env.QT_ROOT}}/lib/cmake/Qt5Test \
              -DQt5WebEngineWidgets_DIR=${{env.QT_ROOT}}/lib/cmake/Qt5WebEngineWidgets \
              -DCMAKE_PREFIX_PATH="${{env.QT_ROOT}}:${{env.INSTALL_DIR}}" \
              -DCMAKE_TOOLCHAIN_FILE=${{env.VCPKG_ROOT}}/scripts/buildsystems/vcpkg.cmake \
              -DVCPKG_CHAINLOAD_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
              -DANDROID_ABI=${{matrix.ANDROID_ABI}}
          cmake --build . --config ${{ matrix.BUILD_TYPE }}
          cmake --build . --config ${{ matrix.BUILD_TYPE }} --target install
          cmake --build . --config ${{ matrix.BUILD_TYPE }} --target APK
