# Author: Kang Lin<kl222@126.com>

name: build_macos

on:
  workflow_call:
    outputs:
      name:
        description: "The artifact name"
        value: ${{ jobs.build_macos.outputs.name }}

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build_macos:
    strategy:
      matrix:
        # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
        BUILD_TYPE: [Release, Debug]
        qt_version: [6.6.2, 5.15.2, 5.12.12]
        qt_arch: [clang_64]
        include:
          - qt_version: 6.6.2
            qt_modules: 'qtscxml'

          - qt_version: 5.15.2

          - qt_version: 5.12.12

    # See: https://docs.github.com/zh/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
    # See: https://github.com/actions/runner-images/tree/main
    runs-on: macos-13

    env:
      BUILD_TYPE:  ${{ matrix.BUILD_TYPE }}
      SOURCE_DIR:  ${{github.workspace}}/.cache/source
      TOOSL_DIR:   ${{github.workspace}}/.cache/tools
      INSTALL_DIR: ${{github.workspace}}/.cache/install
      qt_modules: qtwebengine ${{matrix.qt_modules}}
      VCPKGGITCOMMITID: 59aeb8fe8fe1c980de6bd5ba634cf21024522d81
      RabbitCommon_VERSION: v2.3.3
      artifact_name: build_macos

    # Map the job outputs to step outputs
    outputs:
      name: ${{ env.artifact_name }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Make directories
        run: |
          cmake -E make_directory ${{env.SOURCE_DIR}}
          cmake -E make_directory ${{env.TOOSL_DIR}}
          cmake -E make_directory ${{env.INSTALL_DIR}}
          cmake -E make_directory ${{github.workspace}}/build
          cmake -E make_directory ${{github.workspace}}/build_qmake
          cmake -E make_directory ${{github.workspace}}/build_test

      - name: Cache installed
        uses: actions/cache@v4
        id: cache-installed
        with:
          path: |
            ${{env.INSTALL_DIR}}
          key: macos_install_qt${{matrix.qt_version}}_${{matrix.qt_arch}}_${{matrix.BUILD_TYPE}}

      - name: run vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          # Indicates whether to only setup vcpkg (i.e. installing it and setting the environment variables VCPKG_ROOT, RUNVCPK_VCPKG_ROOT), without installing any port.
          #setupOnly: # optional
          #vcpkgGitURL: https://github.com/KangLin/vcpkg.git
          vcpkgGitCommitId: ${{env.VCPKGGITCOMMITID}}
          vcpkgDirectory: ${{runner.workspace}}/vcpkg/

      - name: Install Qt
        # You may pin to the exact commit or the version.
        # uses: jurplel/install-qt-action@a962fb91949c8e846a3e4a944d50e7ef5cc3a28a
        uses: jurplel/install-qt-action@v3
        with:
          # Directory to install Qt
          dir: ${{env.TOOSL_DIR}}/qt # optional
          # Version of Qt to install
          version: ${{matrix.qt_version}} # optional, default is 5.15.2
          modules: ${{env.qt_modules}} # optional. See: https://ddalcino.github.io/aqt-list-server/
          cache: true
          cache-key-prefix: cached_qt

      - name: Build and test
        if: false
        working-directory: ${{github.workspace}}/build_test
        run: |
          cmake ${{github.workspace}} \
              -DCMARK_SHARED=OFF \
              -DCMARK_TESTS=OFF \
              -DCMARK_STATIC=ON \
              -Dcmark-gfm_DIR=${{env.INSTALL_DIR}}/lib/cmake \
              -DCMAKE_BUILD_TYPE=${{ matrix.BUILD_TYPE }} \
              -DCMAKE_INSTALL_PREFIX=`pwd`/install \
              -DCMAKE_PREFIX_PATH=${{env.INSTALL_DIR}}/lib/cmake \
              -DINSTALL_QT=ON \
              -DBUILD_APP=ON \
              -DBUILD_TEST=ON
          cmake --build . --config ${{ matrix.BUILD_TYPE }}
          cmake --build . --config ${{ matrix.BUILD_TYPE }} --target install
          ctest -V

      - name: Make zip package
        working-directory: ${{github.workspace}}/build
        run: |
          cmake ${{github.workspace}} \
              -DCMARK_SHARED=OFF \
              -DCMARK_TESTS=OFF \
              -DCMARK_STATIC=ON \
              -Dcmark-gfm_DIR=${{env.INSTALL_DIR}}/lib/cmake \
              -DCMAKE_BUILD_TYPE=${{ matrix.BUILD_TYPE }} \
              -DCMAKE_INSTALL_PREFIX=`pwd`/install \
              -DCMAKE_PREFIX_PATH=${{env.INSTALL_DIR}}/lib/cmake \
              -DINSTALL_QT=OFF
          cmake --build . --verbose --config ${{ matrix.BUILD_TYPE }} --target install
          cmake --build . --verbose --config ${{ matrix.BUILD_TYPE }} --target package
          if [ "${{ matrix.BUILD_TYPE }}" == "Release" ]; then
            if [ -n "${Qt5_DIR}" ]; then
              QT_ROOT=${Qt5_DIR}
            fi
            if [ -n "${Qt6_DIR}" ]; then
              QT_ROOT=${Qt6_DIR}
            fi
            #${QT_ROOT}/bin/macdeployqt `pwd`/install/FileBrowser.app -dmg -verbose=3
            lipo -info install/FileBrowser.app/Contents/MacOS/FileBrowser
            #lipo -info install/FileBrowser.app/FrameWorks/QtGui.framework/Versions/5/QtGui
            otool -l install/FileBrowser.app/Contents/MacOS/FileBrowser | grep -A2 LC_RPATH
            otool -L install/FileBrowser.app/Contents/MacOS/FileBrowser
            otool -l install/FrameWorks/libRabbitCommon.dylib | grep -A3 -B1 "LC_RPATH"
            otool -L install/FrameWorks/libRabbitCommon.dylib
            7z a RabbitCommon_${{env.RabbitCommon_VERSION}}_macos_${{matrix.BUILD_TYPE}}.zip ./install/*
          fi

      - name: Update artifact
        if: ${{ matrix.BUILD_TYPE == 'Release' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.artifact_name }}_${{matrix.qt_version}}_${{matrix.qt_arch}}
          path: |
            ${{github.workspace}}/build/RabbitCommon_${{env.RabbitCommon_VERSION}}_macos_${{matrix.BUILD_TYPE}}.zip
            ${{github.workspace}}/build/rabbitcommon_*.tar.gz

#    - name: Upload To Github Release
#      if: ${{ matrix.BUILD_TYPE == 'Release' && startsWith(github.ref, 'refs/tags/') }}
#      uses: softprops/action-gh-release@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        prerelease: true
#        body: |
#           [:cn: 修改日志](ChangeLog_zh_CN.md) [:us: Change log](ChangeLog.md)
#        files: |
#            ${{github.workspace}}/rabbitcommon_${{env.RabbitCommon_VERSION}}_amd64.deb
