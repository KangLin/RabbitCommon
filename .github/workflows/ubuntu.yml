# Author: Kang Lin<kl222@126.com>

name: build_ubuntu

on:
  workflow_call:
    outputs:
      name:
        description: "The artifact name"
        value: ${{ jobs.build_ubuntu.outputs.name }}

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build_ubuntu:
    strategy:
      matrix:
        BUILD_TYPE: [Release, Debug]

    # See: https://docs.github.com/zh/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
    # See: https://github.com/actions/runner-images/
    runs-on: ubuntu-latest

    env:
      BUILD_TYPE:  ${{ matrix.BUILD_TYPE }}
      SOURCE_DIR:  ${{github.workspace}}/.cache/source
      TOOSL_DIR:   ${{github.workspace}}/.cache/tools
      INSTALL_DIR: ${{github.workspace}}/.cache/install_ubuntu
      RabbitCommon_VERSION: 2.2.6
      artifact_name: build_ubuntu

    # Map the job outputs to step outputs
    outputs:
      name: ${{ env.artifact_name }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Make directories
        run: |
          cmake -E make_directory ${{env.SOURCE_DIR}}
          cmake -E make_directory ${{env.TOOSL_DIR}}
          cmake -E make_directory ${{env.INSTALL_DIR}}
          cmake -E make_directory ${{github.workspace}}/build
          cmake -E make_directory ${{github.workspace}}/build_test

      - name: Cache installed
        uses: actions/cache@v3
        id: cache-installed
        with:
          path: |
            ${{env.INSTALL_DIR}}
          key: install_ubuntu_${{matrix.BUILD_TYPE}}
      
      - name: Install apt packages
        run: |
          sudo apt update -y
          sudo apt upgrade -y
          sudo apt install -y -q cmake build-essential xvfb xpra \
              libglu1-mesa-dev libpulse-mainloop-glib0 \
              debhelper fakeroot \
              qt6-tools-dev qt6-tools-dev-tools qt6-base-dev qt6-base-dev-tools \
              qt6-l10n-tools qt6-translations-l10n qt6-scxml-dev \
              libcmark-gfm-dev libcmark-gfm-extensions-dev \
              libcmark-dev cmark
      
      - name: Build and test
        working-directory: ${{github.workspace}}/build_test
        run: |
          cmake -E make_directory ${{github.workspace}}/build_test
          cmake ${{github.workspace}} \
                -DCMARK_SHARED=OFF \
                -DCMARK_TESTS=OFF \
                -DCMARK_STATIC=ON \
                -DCMAKE_BUILD_TYPE=${{ matrix.BUILD_TYPE }} \
                -DCMAKE_INSTALL_PREFIX=`pwd`/install \
                -DCMAKE_PREFIX_PATH=${{ env.INSTALL_DIR }}/lib/cmake \
                -DRABBIT_ENABLE_INSTALL_QT=ON \
                -DBUILD_APP=OFF \
                -DBUILD_TEST=ON
          cmake --build . --config ${{ matrix.BUILD_TYPE }}
          cmake --build . --config ${{ matrix.BUILD_TYPE }} --target install
          cmake --build . --config ${{ matrix.BUILD_TYPE }} --target package
          sudo Xvfb :99 -ac &
          export DISPLAY=:99.0
          ctest -V
          
      - name: Build RabbitCommon library
        working-directory: ${{github.workspace}}/build
        run: |
          cmake ${{github.workspace}} \
                -DCMARK_SHARED=OFF \
                -DCMARK_TESTS=OFF \
                -DCMARK_STATIC=ON \
                -DCMAKE_BUILD_TYPE=${{ matrix.BUILD_TYPE }} \
                -DCMAKE_INSTALL_PREFIX=`pwd`/install \
                -DCMAKE_PREFIX_PATH=${{ env.INSTALL_DIR }}/lib/cmake \
                -DRABBIT_ENABLE_INSTALL_QT=OFF \
                -DBUILD_APP=OFF \
                -DBUILD_TEST=OFF
          cmake --build . --config ${{ matrix.BUILD_TYPE }} --target install
          cmake --build . --config ${{ matrix.BUILD_TYPE }} --target package

      - name: Make deb package
        run: |
          git clean -xdf
          export QT_ROOT=/usr/lib/`uname -a`-linux-gnu/cmake/Qt6
          ./build_debpackage.sh
          cp ../rabbitcommon*.deb .

      - name: Update artifact
        if: ${{ matrix.BUILD_TYPE == 'Release' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.artifact_name }}
          path: |
            ${{github.workspace}}/*.deb

#    - name: Upload To Github Release
#      if: ${{ matrix.BUILD_TYPE == 'Release' && startsWith(github.ref, 'refs/tags/') }}
#      uses: softprops/action-gh-release@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        prerelease: true
#        body: |
#           [:cn: 修改日志](ChangeLog_zh_CN.md) [:us: Change log](ChangeLog.md)
#        files: |
#            ${{github.workspace}}/rabbitcommon_${{env.RabbitCommon_VERSION}}_amd64.deb
