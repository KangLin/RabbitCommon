# 参见：https://blog.csdn.net/qq_43842093/article/details/122810961

#设置储存log文件的根目录
logpath=log

# 配置日志的输出格式: %r耗费毫秒数 %p日志的优先级 %t线程名 %C所属类名通常为全类名 %L代码中的行号 %x线程相关联的NDC %m日志 %n换行
logConversionPattern=%F:%L [%t] %5p %c - %m%n

log4j.reset=true
log4j.Debug=WARN
log4j.threshold=NULL
#设置是否监听QDebug输出的字符串
log4j.handleQtMessages=true
#在运行中，是否监视此文件配置的变化
log4j.watchThisFile=false

#设置根Logger的输出log等级为All
# log4j.rootLogger日志输出类别和级别：只输出不低于该级别的日志信息	DEBUG < INFO < WARN < ERROR < FATAL
#设置Log输出的几种输出源（appender）。
#格式：[ level ] , appenderName1, appenderName2, …
# level ：设定日志记录的最低级别，
#        可设的值有 OFF、FATAL、ERROR、WARN、INFO、DEBUG、ALL 或者自定义的级别，Log4j建议只使用中间四个级别。
#        通过在这里设定级别，您可以控制应用程序中相应级别的日志信息的开关，比如在这里设定了INFO级别，则应用程序中所有DEBUG级别的日志信息将不会被打印出来。
#        只输出不低于该级别的日志信息	DEBUG < INFO < WARN < ERROR < FATAL
# appenderName：就是指定日志信息要输出到哪里。可以同时指定多个输出目的地，用逗号隔开。本例是：console, daily
log4j.rootLogger=ALL, console, daily


###############################
# 输出到控制台
###############################

# 配置INFO CONSOLE输出到控制台
log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.console.target=STDOUT_TARGET
# 配置CONSOLE设置为自定义布局模式
log4j.appender.console.layout=org.apache.log4j.PatternLayout
# 配置logfile为自定义布局模式
log4j.appender.console.layout.ConversionPattern=${logConversionPattern}


###############################
# 输出到日志文件中
###############################

# 配置 logfile 输出到文件中 每日产生文件
log4j.appender.daily=org.apache.log4j.DailyFileAppender
# 输出文件位置此为项目根目录下的logs文件夹中
log4j.appender.daily.file=${logpath}/error.log
#true表示消息增加到指定文件中，false 则将消息覆盖指定的文件内容，默认值是 false
log4j.appender.daily.appendFile=true
# 日期格式
log4j.appender.daily.datePattern=_yyyy_MM_dd
# 立即输出。表示所有消息都会被立即输出，设为 false 则不立即输出，默认值是 true
log4j.appender.daily.immediateFlush=true
# 输入日志等级
log4j.appender.daily.Threshold = DEBUG
# 设置保留天数
log4j.appender.daily.keepDays=10
# 配置logfile为自定义布局模式
log4j.appender.daily.layout=org.apache.log4j.PatternLayout
log4j.appender.daily.layout.ConversionPattern=${logConversionPattern}


###############################
#模块输出到独立的日志
###############################
log4j.logger.test=ERROR, test
#false，只输出到此适配器。true，同时输出到log4j.rootLogger所配置的日志中。默认值是 true
log4j.additivity.test=false
# 输出文件位置此为项目根目录下的logs文件夹中
log4j.appender.test.file=${logpath}/test.log
# 配置logfile为自定义布局模式
log4j.appender.daily.layout=org.apache.log4j.PatternLayout
log4j.appender.daily.layout.ConversionPattern=${logConversionPattern}
