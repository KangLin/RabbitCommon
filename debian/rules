#!/usr/bin/make -f
# See debhelper(7) (uncomment to enable)
# output every command that modifies files on the build system.
export DH_VERBOSE = 1

# see FEATURE AREAS in dpkg-buildflags(1)
#export DEB_BUILD_MAINT_OPTIONS = hardening=+all

# see ENVIRONMENT in dpkg-buildflags(1)
# package maintainers to append CFLAGS
#export DEB_CFLAGS_MAINT_APPEND  = -Wall -pedantic
# package maintainers to append LDFLAGS
#export DEB_LDFLAGS_MAINT_APPEND = -Wl,--as-needed

#export QT_SELECT=qt5

DEB_HOST_MULTIARCH ?= $(shell dpkg-architecture -qDEB_HOST_MULTIARCH)
BUILD_DIR = "build_$(DEB_HOST_MULTIARCH)"
PACKAGE_rabbitcommon_DIR = "debian/rabbitcommon"
PACKAGE_rabbitcommon_dev_DIR = "debian/rabbitcommon-dev"

%:
	dh $@

# Debian 维护者指南: https://www.debian.org/doc/manuals/debmake-doc/index.zh-cn.html
# Debian 新维护者手册: https://www.debian.org/doc/manuals/maint-guide/dreq.zh-cn.html#rules
# See: man debhelper
# This is example for Cmake (See https://bugs.debian.org/641051 )
override_dh_auto_configure:
    # See: man dh_auto_configure and debhelper
	dh_auto_configure -B$(BUILD_DIR) -- \
            -DCMAKE_BUILD_TYPE=Release -DBUILD_APP=OFF -DBUILD_TESTS=OFF

override_dh_auto_build:
	cmake  --build $(BUILD_DIR) --config Release

override_dh_auto_install:
	cmake --install $(BUILD_DIR) --config Release --component Runtime --prefix $(PACKAGE_rabbitcommon_DIR)/usr
	cmake --install $(BUILD_DIR) --config Release --component Development --prefix $(PACKAGE_rabbitcommon_dev_DIR)/usr

override_dh_builddeb:
	dh_builddeb --package=rabbitcommon -P$(PACKAGE_rabbitcommon_DIR)
	dh_builddeb --package=rabbitcommon-dev -P$(PACKAGE_rabbitcommon_dev_DIR)
